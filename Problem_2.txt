Problem 2: Dot Product and Orthogonality
===============================

PROCEDURE dot_product(v1 : ARRAY OF INTEGER, v2 : ARRAY OF INTEGER, size : INTEGER, OUT ps : INTEGER)
VAR
    i : INTEGER;
BEGIN
    ps := 0;
    FOR i FROM 1 TO size DO
        ps := ps + (v1[i] * v2[i]);
    END_FOR
END_PROCEDURE


ALGORITHM check_orthogonal_vectors
VAR
    v1, v2 : ARRAY[1..3] OF INTEGER;
    ps : INTEGER;
    i : INTEGER;

BEGIN
    v1[1] := 1;  v1[2] := 0;  v1[3] := 0;
    v2[1] := 0;  v2[2] := 1;  v2[3] := 0;

    CALL dot_product(v1, v2, 3, ps);
    IF ps = 0 THEN
        Write("Vectors are orthogonal");
    ELSE
        Write("Vectors are not orthogonal");
    END_IF
END


======== Function Version ========

FUNCTION dot_product(v1 : ARRAY OF INTEGER, v2 : ARRAY OF INTEGER, size : INTEGER) : INTEGER
VAR
    i, result : INTEGER;
BEGIN
    result := 0;
    FOR i FROM 1 TO size DO
        result := result + (v1[i] * v2[i]);
    END_FOR
    RETURN result;
END_FUNCTION


ALGORITHM check_orthogonal_using_function
VAR
    v1, v2 : ARRAY[1..3] OF INTEGER;
    ps : INTEGER;

BEGIN
    v1[1] := 2;  v1[2] := 3;  v1[3] := -1;
    v2[1] := 1;  v2[2] := 1;  v2[3] := 4;

    ps := dot_product(v1, v2, 3);

    IF ps = 0 THEN
        Write("Vectors are orthogonal");
    ELSE
        Write("Vectors are not orthogonal");
    END_IF
END